#!/usr/bin/bash


#			*** Make sure 'LABEL' matches your root system label !! ***
#			You can find this using the command 'blkid'

LABEL=ROOT-laptop

# $root (or /@root) will be where all the system files are stored once
# you've made a snapshot to /@root. At that point you'll be able to delete
# all the files in your original / directory (with the exception of
# .snapshots and @root) by issuing the 'delete root system' option in the menu.
# From then on /@root will be where all your new system files will reside

root='/@root'

snapshot_dir=/.snapshots
mountOpts='noatime'
new_root=/new_root
mnt=/mnt

# Useful file: /usr/lib/initcpio/init


boot() {

	# Check if the boot directory contains a working system
	if [ -d "$mnt$1/etc" ]; then
			
		echo "Booting $1..."
		mount --bind -o "$mountOpts" "$mnt$1" $new_root
		
	else

		echo "No system found at $1."
		
		if [ "$1" = "$root" ]; then

			echo "Booting / instead..."
			mount --bind -o "$mountOpts" "$mnt" $new_root
		
		else

			echo "Booting $root instead..."
			mount --bind -o "$mountOpts" "$mnt$root" $new_root

		fi

		sleep 2

	fi
	
	mount --mkdir --bind -o "$mountOpts" "$mnt$snapshot_dir" "$new_root$snapshot_dir"
		
	sleep 1

}


run_latehook() {

	umount $new_root
	mount -m LABEL="$LABEL" $mnt
	
	echo -e "\nPress any key for bcachefs rollback.\n"

	if [ $(read -sn1 -t 2 && echo 1) ]; then
		
		echo -e "\nWhat would you like to do?

<s> boot into a snapshot
<r> restore snapshot
<w> snapshot ro to rw (TODO)
<o> boot snapshot + overlay (TODO)
<b> boot root system
<d> delete root system
<e> enter bash
<t> testing (used for debug)

<ENTER> boot @root\n"

		read -sn 1 key

	fi

	if [[ "$key" = 't' ]]; then
		
		bash
	
	elif [[ "$key" = 'w' ]]; then
			
		echo "TODO!"
		bash

	elif [[ "$key" = 's' ]]; then
	
		echo -e "\nType the name of the snapshot you would like to load.\n"

		# TODO: create a way to easily select snapshots instead of having to enter them
		
		ls "$mnt$snapshot_dir"

		echo

		read snapshot
		
		boot "$snapshot_dir/$snapshot"
	
	elif [[ "$key" = 'b' ]]; then

		boot /

	elif [[ "$key" = 'r' ]]; then

		echo -e "\nType the name of the snapshot you would like to recover to @root.\n"
		
		ls "$mnt$snapshot_dir"

		echo

		read snapshot
	
		if [ -d "$mnt$snapshot_dir/$snapshot" ]; then
			
			if [ -d "$mnt$snapshot_dir$root-old" ]; then
				bcachefs subvolume delete "$mnt$snapshot_dir$root-old"
				rm -rf "$mnt$snapshot_dir$root-old"
			fi

			if [ -d "$mnt$root" ]; then
				bcachefs subvolume snapshot "$mnt$root" "$mnt$snapshot_dir$root-old"
				bcachefs subvolume delete $mnt$root
				rm -rf $mnt$root
			fi

			bcachefs subvolume snapshot "$mnt$snapshot_dir/$snapshot" $mnt$root

			boot $root

		else
			
			echo -e "\nThe snapshot '$snapshot' does not exist!\n"
			bash

		fi


	elif [[ "$key" = 'e' ]]; then

		echo "Entering bash..."
		bash
	
	elif [[ "$key" = 'd' ]]; then
	
	
		# You can check for any main directory in @root. Just make sure the system is there or not 
		# You must keep .snapshots and @root in / or the system won't start
		if [ -d $mnt$root/etc ]; then

			echo "Deleting / (excepting .snapshots and @root)..."
			
			rm -rf /mnt/bin /mnt/boot /mnt/dev /mnt/efi /mnt/etc /mnt/home /mnt/lib /mnt/lib64 /mnt/'lost+found' /mnt/opt /mnt/proc /mnt/root /mnt/run /mnt/sbin /mnt/srv /mnt/sys /mnt/tmp /mnt/usr /mnt/var
			
			boot $root

		else
			
			echo -e "\nNo system located at @root. Will not delete main system.\n"
			bash
		
		fi

	else

		boot $root

	fi

}
